services:
  # PostgreSQL Database
  postgres:
    image: postgres:17-alpine
    container_name: intai_postgres_dev
    restart: unless-stopped
    environment:
      POSTGRES_DB: intai_db
      POSTGRES_USER: intai_user
      POSTGRES_PASSWORD: intai_password
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/pgdata
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - intai_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U intai_user -d intai_db"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # pgAdmin for Database Management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: intai_pgadmin_dev
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@intai.dev
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./database/pgadmin-servers.json:/pgadmin4/servers.json:ro
    networks:
      - intai_network
    depends_on:
      postgres:
        condition: service_healthy

  # Redis for Session Storage and Caching
  redis:
    image: redis:8-alpine
    container_name: intai_redis_dev
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - intai_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru

  # Redis Commander for Redis Management (Optional)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: intai_redis_commander_dev
    restart: unless-stopped
    environment:
      REDIS_HOSTS: redis:redis:6379
      HTTP_USER: admin
      HTTP_PASSWORD: admin123
    ports:
      - "8081:8081"
    networks:
      - intai_network
    depends_on:
      redis:
        condition: service_healthy

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local
  redis_data:
    driver: local

networks:
  intai_network:
    driver: bridge
    name: intai_network 